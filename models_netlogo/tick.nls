;; ##### TICK FUNCTIONS #####

to update-health
  ask residents [
    set health health + table:get health-table medical-treatment
  ]
  ask residents with [health < 0][
    set deaths deaths + 1
    die
  ]
  ask residents with [health > 1][
    set recovered recovered + 1  ;; TODO: Note that there are already residents in hospital, those should probably not be counted
    die
  ]
end

to call-112
  ask crossings 
  [ if any? residents-here with [not reported?]
    [
    let randomizer random-float 1
    if randomizer <  1 - ( 1 - probability-call-112 / 100 ) ^ total-residents
      [ ask residents-here [ set reported? True ] ] 
    ]
  ]
end

to move-ambulances
  ask ambulances [
    if not enroute? [request-new-patient]
  ]
end

to request-new-patient
  ;; Get resident with lowest health in search radius that is reported
  let target-patient nobody
  ask one-of crossings-at 0 0 [
    let potential-crossings nw:turtles-in-radius initial-ambulance-search-radius
    type "All potential crossings: " print potential-crossings
    set potential-crossings potential-crossings with [any? residents-here with [reported?]]
    type "Potential crossings with reported residents: " print potential-crossings
    let potential-patients residents-on potential-crossings
    type "Potential patients: " print potential-patients
    set target-patient min-one-of potential-patients with [reported?] [health]
    type "Target patients: " print target-patient
  ]
  set patient target-patient
  set enroute? True

  if patient != nobody [
    set destination one-of crossings-on patient
  ]
end